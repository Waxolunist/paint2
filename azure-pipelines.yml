# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

stages:
- stage: Builds

  pool:
    vmImage: 'ubuntu-latest'
  dependsOn: []
  jobs:
    - job: buildandpush
      displayName: Build and Push
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '14.x'
        displayName: 'Install Node.js'

      - task: Npm@1
        inputs:
          command: 'install'
        displayName: 'npm install'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'audit'
        displayName: 'npm audit'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'outdated'
        displayName: 'npm outdated'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run lint:warningson'
        displayName: 'npm lint'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run bundle'
        displayName: 'npm bundle'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run test:coverage'
        displayName: 'npm test'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run test:cy'    
        displayName: 'npm cypress'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'coverage/junit.xml'
          testRunTitle: 'jest'
        displayName: 'publish test data jest'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'coverage/cypress-junit.xml'
          testRunTitle: 'cypress'
        displayName: 'publish test data cypress'

      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: 'cobertura'
          summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml
        displayName: 'publish coverage data'

      - task: Docker@2
        displayName: docker login
        inputs:
          command: login
          containerRegistry: dockerRegistryVcollaborate

      - task: Docker@2
        displayName: docker build and push
        inputs:
          command: buildAndPush
          repository: dev/waxolunist/paint2
          tags: |
            latest

#- stage: Deploy
#  displayName: Deploy stage
#  dependsOn: Builds
#  jobs:
#  - deployment: Deploy
#    displayName: Deploy job
#    pool:
#      vmImage:
#    environment: Production
#    strategy:
#      runOnce:
#        deploy:
#          steps:
#          - task: DownloadPipelineArtifact@2
#            inputs:
#              artifactName: 'manifests'
#              downloadPath: '$(System.ArtifactsDirectory)/manifests'
