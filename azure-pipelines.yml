parameters:
- name: releasetype
  displayName: 'Release Type'
  type: string
  default: ''
  values:
  - ''
  - major
  - minor
  - patch

trigger:
- master

stages:
- stage: Build
  displayName: Build
  pool:
    vmImage: 'ubuntu-latest'
  dependsOn: []
  jobs:
    - job: buildandpush
      displayName: Build and Push
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '14.x'
        displayName: 'Install Node.js'

      - task: Npm@1
        inputs:
          command: 'install'
        displayName: 'npm install'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'audit'
        displayName: 'npm audit'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'outdated'
        displayName: 'npm outdated'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run lint:warningson'
        displayName: 'npm lint'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run bundle'
        displayName: 'npm bundle'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run test:coverage'
        displayName: 'npm test'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run test:cy'    
        displayName: 'npm cypress'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'coverage/junit.xml'
          testRunTitle: 'jest'
        displayName: 'publish test data jest'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'coverage/cypress-junit.xml'
          testRunTitle: 'cypress'
        displayName: 'publish test data cypress'

      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: 'cobertura'
          summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml
        displayName: 'publish coverage data'

      - task: Docker@2
        displayName: docker login
        inputs:
          command: login
          containerRegistry: dockerRegistryVcollaborate

      - task: Docker@2
        displayName: docker build and push
        inputs:
          command: buildAndPush
          repository: dev/waxolunist/paint2
          tags: |
            latest

- stage: Version
  displayName: Version
  pool:
    vmImage: 'ubuntu-latest'
  dependsOn: Build
  condition: and(succeeded('Build'), not(eq(${{ releasetype }}, '')))

- stage: QA
  displayName: QA
  dependsOn: [Build, Version]
  condition: and(succeeded('Build'), succeeded('Version'))
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    environment: Production
    strategy:
      runOnce:
        deploy:
          steps:
            - task: Bash@3
              inputs:
                targetType: 'inline'
                script: echo test
